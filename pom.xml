<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.3.RELEASE</version>
		<relativePath />
	</parent>
	<groupId>com.deltadental.pcp.search.service</groupId>
	<artifactId>pcp-search-service</artifactId>
	<version>1.0.0</version>
	<name>pcp-search-service</name>
	<description>Wrapper Springboot Service for PCP Inquiry Service</description>
	<properties>
		<service.name>${project.name}</service.name>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Java Version -->
		<java.version>11</java.version>

		<!-- Maven version as of 1/15/2019 -->
		<maven-compiler.version>3.8.0</maven-compiler.version>
		<spring.boot.version>2.3.3.RELEASE</spring.boot.version>
		<org.springframework-version>5.2.4.RELEASE</org.springframework-version>
		<spring.cloud.version>Finchley.RELEASE</spring.cloud.version>

		<json.version>20210307</json.version>

		<lombok.version>1.18.16</lombok.version>
		<sqlserver.version>4.0</sqlserver.version>
		<!-- Testing framework -->
		<junit.version>5.5.2</junit.version>
		<junit.platform.version>1.7.1</junit.platform.version>

		<mokito.version>3.1.0</mokito.version>

		<moco.version>0.11.0</moco.version>
		<easymock.version>2.4</easymock.version>

		<!-- Delta Dental's Platform common library with frequently needed utilities -->
		<services-common-library-version>1.0.12</services-common-library-version>

		<!-- Code Quality modules -->
		<maven-check-style-plugin-version>2.17</maven-check-style-plugin-version>
		<maven-jxr-plugin-version>2.5</maven-jxr-plugin-version>

		<docker.plugin.version>0.2.3</docker.plugin.version>

		<!-- SonarQube properties -->

		<jacoco.version>0.8.5</jacoco.version>
		<sonar.projectKey>PCP-SEARCH-SERVICE</sonar.projectKey>
		<sonar.projectName>PCP Search Service</sonar.projectName>
		<sonar.language>java</sonar.language>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
		<sonar.coverage.jacoco.xmlReportPath>target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPath>

		<!-- Logger versions -->
		<log4j2.version>2.14.0</log4j2.version>
		<slf4j.version>1.7.25</slf4j.version>
		<jackson.version>2.10.2</jackson.version>

	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		
		<!-- Spring boot Web starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-annotations</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jdbc</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
		<!-- Added for actuator -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-support</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jms</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Spring WS clinet support -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
		</dependency>
		<dependency>
            <groupId>wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
        </dependency>
		
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- Delta Dental's common library -->
		<dependency>
			<groupId>com.deltadental.platform.enterprise.service</groupId>
			<artifactId>services-common</artifactId>
			<version>${services-common-library-version}</version>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${json.version}</version>
		</dependency>
		<!-- End of Utils -->

		<dependency>
		    <groupId>com.sun.xml.bind</groupId>
		    <artifactId>jaxb-core</artifactId>
		    <version>2.3.0.1</version>
		</dependency>
		<dependency>
	        <groupId>javax.xml.bind</groupId>
	        <artifactId>jaxb-api</artifactId>
	        <version>2.3.1</version>
	    </dependency>
	    <dependency>
		  <groupId>org.glassfish.jaxb</groupId>
		  <artifactId>jaxb-runtime</artifactId>
		  <version>2.3.1</version>
		</dependency>
	    <dependency>
	        <groupId>com.sun.xml.bind</groupId>
	        <artifactId>jaxb-impl</artifactId>
	        <version>2.3.1</version>
	    </dependency>
		<dependency>
		    <groupId>org.javassist</groupId>
		    <artifactId>javassist</artifactId>
		    <version>3.25.0-GA</version>
		</dependency>
		<dependency>
		    <groupId>javax.xml.ws</groupId>
		    <artifactId>jaxws-api</artifactId>
		    <version>2.3.1</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.xml.messaging.saaj</groupId>
		    <artifactId>saaj-impl</artifactId>
		    <version>1.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-bean-validators</artifactId>
		    <version>2.9.2</version>
		</dependency>
				<!-- SQL Server -->
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Oracle Db -->
		<dependency>
		  <groupId>com.oracle.database.jdbc</groupId>
		  <artifactId>ojdbc10</artifactId>
		  <version>19.3.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.3.7.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>5.3.6.Final</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Testing Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-commons</artifactId>
			<version>${junit.platform.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-engine</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.vladmihalcea</groupId>
			<artifactId>hibernate-types-55</artifactId>
			<version>2.16.2</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- Plugin to copy the log4j.xml from platform's common library to follow 
				standard log patterns -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>log4j2</id>
						<phase>process-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.deltadental.platform.enterprise.service</groupId>
									<artifactId>services-common</artifactId>
									<version>${services-common-library-version}</version>
									<outputDirectory>target/classes/</outputDirectory>
									<includes>log4j2.xml</includes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- Compiler plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler.version}</version>
				<configuration>
					<release>${java.version}</release>
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
				</configuration>
			</plugin>
			<!-- Docker image creation -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.plugin.version}</version>
				<configuration>
					<imageName>${project.artifactId}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<!-- End Docker image creation -->

			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
    			<artifactId>maven-jaxb2-plugin</artifactId>
				<version>0.14.0</version>
				<executions>
					<execution>
						<id>GeneratePCPSearchServiceStubs</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<schemaLanguage>WSDL</schemaLanguage>
					<generatePackage>com.deltadental.platform.pcp.stub</generatePackage>
					<generateDirectory>${project.build.directory}/generated/src/main/java</generateDirectory>
					<schemaDirectory>${project.basedir}/src/main/resources/wsdl/pcp</schemaDirectory>
					<schemaIncludes>
			        	<include>*.wsdl</include>
			       	</schemaIncludes>
				</configuration>
			</plugin>
			<!-- Jacoco integration test plugin -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.6.0.1398</version>
			</plugin>
			<!-- Jacoco integration test plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<targetPath>META-INF</targetPath>
						<directory>src/main/resources/META-INF</directory>
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<id>coverage</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
